import { useState } from "react";
import { LuScanQrCode } from "react-icons/lu";
import { FaMapMarkerAlt, FaRegCreditCard, FaMoneyBill } from "react-icons/fa";
import field from "../../public/field.jpg";
import googlemap from "../../public/Google_Maps_icon_(2015-2020).svg.png";

// üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á
const FIELD_DATA = {
  name: "‡∏™‡∏ô‡∏≤‡∏°‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡∏®‡∏£‡∏µ‡∏õ‡∏ó‡∏∏‡∏°",
  type: "‡∏´‡∏ç‡πâ‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°",
  location: "2410/2 ‡∏ñ. ‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô ‡πÅ‡∏Ç‡∏ß‡∏á‡πÄ‡∏™‡∏ô‡∏≤‡∏ô‡∏¥‡∏Ñ‡∏° ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10900",
  googlemapLink: "https://maps.app.goo.gl/oKR8s7gfsfGVqKPs8",
  details: [
    "‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏ô‡∏≤‡∏°: 5 ‡∏Ñ‡∏ô",
    "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ: ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•, ‡∏•‡∏π‡∏Å‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•",
    "‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å: ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤, ‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ",
    "‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö: ‡∏´‡πâ‡∏≤‡∏°‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡πÉ‡∏ô‡∏™‡∏ô‡∏≤‡∏°, ‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏≥‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÄ‡∏Ç‡πâ‡∏≤",
  ],
  price: 700,
};

const RESERVE_DATE = { day: 22, month: 10, year: 2024 };
const TIME_START = "18:00";
const TIME_END = "19:00";

// üïí Utility functions
const formatDate = ({ day, month, year }) =>
  `${String(day).padStart(2, "0")}/${String(month).padStart(2, "0")}/${year}`;

const getDurationInHours = (start, end) => {
  const [sh, sm] = start.split(":").map(Number);
  const [eh, em] = end.split(":").map(Number);
  const total = eh * 60 + em - (sh * 60 + sm);
  return Math.floor(total / 60);
};

const calculateTotal = () =>
  getDurationInHours(TIME_START, TIME_END) * FIELD_DATA.price;

const paymentMethods = [
  {
    id: "promptpay",
    label: "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå",
    icon: LuScanQrCode,
    border: "border-yellow-600",
    active: "bg-yellow-400 text-gray-800",
    inactive: "bg-yellow-100 hover:bg-yellow-300",
  },
  {
    id: "card",
    label: "‡∏ï‡∏±‡∏î‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£",
    icon: FaRegCreditCard,
    border: "border-blue-600",
    active: "bg-blue-400 text-gray-800",
    inactive: "bg-blue-100 hover:bg-blue-300",
  },
  {
    id: "cash",
    label: "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î",
    icon: FaMoneyBill,
    border: "border-green-600",
    active: "bg-green-400 text-gray-800",
    inactive: "bg-green-100 hover:bg-green-300",
  },
];

export default function Reserve() {
  const [selected, setSelected] = useState(null);

  return (
    <div className="flex justify-center min-h-screen bg-gray-100">
      <div className="w-full max-w-md bg-white shadow-md rounded-t-2xl overflow-hidden">
        <img
          src={field}
          alt="‡∏™‡∏ô‡∏≤‡∏°‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•"
          className="w-full h-48 object-cover"
        />

        <div className="p-4">
          {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏≤‡∏° */}
          <div className="flex justify-between items-center">
            <div>
              <h1 className="font-noto-thai text-2xl font-bold">
                {FIELD_DATA.name}
              </h1>
              <p className="font-noto-thai text-gray-700">
                ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏ô‡∏≤‡∏°: {FIELD_DATA.type}
              </p>
            </div>
            <a
              href={FIELD_DATA.googlemapLink}
              target="_blank"
              rel="noopener noreferrer"
              className="flex flex-col items-center"
            >
              <img src={googlemap} alt="Google Map" className="w-16 h-auto" />
              <p className="font-noto-thai text-xs text-center text-blue-600">
                ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏ô Google Maps
              </p>
            </a>
          </div>

          {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á */}
          <div className="mt-4 border-t pt-4 font-noto-thai">
            <h2 className="font-bold text-lg mb-2">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h2>

            <div className="flex justify-between mt-2">
              <p>‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</p>
              <div className="flex text-gray-600">
                <FaMapMarkerAlt className="text-green-600 mr-1" />
                <span className="truncate max-w-[10rem]">
                  {FIELD_DATA.location}
                </span>
              </div>
            </div>

            <div className="flex justify-between mt-2">
              <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</p>
              <p>{formatDate(RESERVE_DATE)}</p>
            </div>

            <div className="flex justify-between mt-2">
              <p>‡πÄ‡∏ß‡∏•‡∏≤</p>
              <p>
                {TIME_START} - {TIME_END} (
                {getDurationInHours(TIME_START, TIME_END)} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
              </p>
            </div>

            <div className="mt-2">
              <p className="font-bold">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</p>
              <ul className="list-disc pl-5 text-gray-700">
                {FIELD_DATA.details.map((detail, i) => (
                  <li key={i}>{detail}</li>
                ))}
              </ul>
            </div>

            {/* ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
            <div className="mt-4 border-t pt-4">
              <p className="font-bold mb-2">‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</p>
              <div className="grid grid-cols-3 gap-3">
                {paymentMethods.map((method) => {
                  const Icon = method.icon;
                  const isActive = selected === method.id;
                  return (
                    <button
                      key={method.id}
                      onClick={() => setSelected(method.id)}
                      className={`transition-all duration-200 py-3 px-2 rounded-lg border ${
                        method.border
                      } flex flex-col items-center text-sm ${
                        isActive ? method.active : method.inactive
                      }`}
                    >
                      <Icon className="w-6 h-6 mb-1" />
                      {method.label}
                    </button>
                  );
                })}
              </div>
            </div>
            <div className="bg-blue-200 text-blue-800 grid grid-cols-2  mt-5 py-2 px-4 rounded-lg">
              <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏ô‡∏≤‡∏°‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
              <p className="font-bold place-self-end">
                {" "}
                {FIELD_DATA.price} ‡∏ö‡∏≤‡∏ó
              </p>
              <p>‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°</p>
              <p className="font-bold text-red-600 place-self-end">
                {" "}
                {calculateTotal()} ‡∏ö‡∏≤‡∏ó
              </p>
            </div>
            <div className="bg-red-200 text-red-800 mt-4 py-2 px-4 rounded-lg">
              <p>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ</p>
            </div>
            <div className="mt-4">
              <button className="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-4 rounded-lg transition-colors duration-200">
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
